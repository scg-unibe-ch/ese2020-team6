@import 'variables';
@import './message-content.component.theme.scss';

@each $theme-name in $theme-names {
  @include message-content-theme($theme-name);
}

.message-content-wrapper {
  padding: $spaceing-s;
  border-radius: $border-radius;
  display: grid;
  grid-template-rows: min-content 1fr auto;
  grid-gap: $spaceing-s;
  width: 100%;
  height: 100%;
  min-height: 300px;


  .receiver {
    font-size: 1.7em;
    line-height: 1em;
    margin: 0;
  }


  .messenger {
    border-radius: $border-radius;
    width: 100%;
    height: 100%;

    .no-messages {
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .messages-wrapper {
      width: 100%;
      height: 100%;
      position: relative;

      .messages {
        position: absolute;
        width: 100%;
        height: 100%;
        display: grid;
        grid-auto-rows: min-content;
        grid-gap: $spaceing-s;
        overflow-y: auto;
        overflow-x: hidden;
        padding: $spaceing-s;

        $width: $spaceing-s;
        $height: $border-radius;

        .message {
          position: relative;
          max-width: 80%;
          display: grid;
          grid-template-rows: auto min-content;
          grid-gap: $spaceing-xs;
          padding: $spaceing-xs;
          border-radius: $border-radius;
          word-wrap: break-word;
          word-break: break-all;

          &::before {
            content: '';
            position: absolute;
            bottom: 0;
            height: $height;
            width: $width;
          }

          &::after {
            content: '';
            position: absolute;
            bottom: 0;
            height: $height;
            width: $width;
          }

          &.sent {
            justify-self: flex-end;
            border-bottom-right-radius: 0;

            &::before {
              right: - $width;
            }

            &::after {
              right: - $width;
              border-bottom-left-radius: $border-radius;
            }
          }

          &.response {
            justify-self: flex-start;
            border-bottom-left-radius: 0;

            &::before {
              left: - $width;
            }

            &::after {
              left: - $width;
              border-bottom-right-radius: $border-radius;
            }

            .info {
              .read-status {
                grid-column: 2 / 3;
              }
            }
          }

          .info {
            font-size: .6em;
            line-height: 1em;
            display: grid;
            grid-auto-flow: column;
            grid-auto-columns: max-content;
            grid-gap: $spaceing-xs;

            .read-status {
              height: 1em;
              width: 1em;
              border-radius: 50%;
            }
          }
        }
      }
    }
  }


  .answer-area {
      display: grid;
      grid-template-columns: 1fr auto;
      grid-gap: $spaceing-s;
      height: auto;
      border-radius: $border-radius;
      line-height: 1em;
      padding: $spaceing-s;
  }
}
